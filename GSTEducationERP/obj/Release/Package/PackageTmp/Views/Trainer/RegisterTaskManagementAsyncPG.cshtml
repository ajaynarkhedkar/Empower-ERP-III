@model GSTEducationERPLibrary.Trainer.Trainer

@{
    ViewBag.Title = "RegisterTaskManagementAsyncPG";
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
}
<h2></h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <html>
    <head>
        <script src="~/Content/plugins/jquery/jquery.min.js" type="text/javascript"></script>
        <!-- Bootstrap 4 -->
        <script src="~/Content/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
        <script src="~/Content/plugins/moment/moment.min.js"></script>
        <!-- Tempusdominus Bootstrap 4 -->
        <script src="~/Content/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
        <script src="~/Content/plugins/daterangepicker/daterangepicker.js"></script>
        <script>
            $(document).ready(function () {
                // Start Timepicker
                $('#startTimepicker').datetimepicker({
                    format: 'LT'
                });

                // End Timepicker
                $('#endTimepicker').datetimepicker({
                    format: 'LT'
                });
            });
        </script>
        <script>
            $(document).ready(function () {
                $('#datepicker, #endDatepicker').datetimepicker({
                    format: 'YYYY-MM-DD', // Adjust the date format as needed
                    icons: {
                        time: 'far fa-clock',
                        date: 'far fa-calendar',
                        up: 'fas fa-chevron-up',
                        down: 'fas fa-chevron-down',
                        previous: 'fas fa-chevron-left',
                        next: 'fas fa-chevron-right',
                        today: 'fas fa-crosshairs',
                        clear: 'far fa-trash-alt',
                        close: 'far fa-times'
                    }
                });

                // Assuming you want to use timepicker for TaskStartTime and TaskEndTime
                $('.timepicker').datetimepicker({
                    format: 'HH:mm', // Adjust the time format as needed
                    icons: {
                        time: 'far fa-clock',
                        date: 'far fa-calendar',
                        up: 'fas fa-chevron-up',
                        down: 'fas fa-chevron-down',
                        previous: 'fas fa-chevron-left',
                        next: 'fas fa-chevron-right',
                        today: 'fas fa-crosshairs',
                        clear: 'far fa-trash-alt',
                        close: 'far fa-times'
                    }
                });
            });
        </script>

        <style>
            h2 {
                padding-top: 10px;
                margin-bottom: 10px;
                font-family: Verdana;
                font-weight: bold;
                font-size: medium;
                color: #33CCCC;
            }
            .form-container {
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                border: 1px solid #ccc;
                border-radius: 5px;
                background-color: #f8f8f8;
            }

            .form-horizontal {
                margin-bottom: 15px;
            }

            .form-group {
                margin-bottom: 15px;
            }

            .control-label {
                font-weight: bold;
            }

            .form-control {
                width: 100%;
                box-sizing: border-box;
            }

            .btn-default {
                background-color: #428bca;
                color: #fff;
                border: 1px solid #357ebd;
            }

                .btn-default:hover {
                    background-color: #3276b1;
                    border: 1px solid #285e8e;
                }

            .text-danger {
                color: #a94442;
            }

            .large-textbox {
                width: 100%;
                height: 150px;
            }
        </style>
    </head>
    <body>
        <div class="form-container">
            <div class="form-horizontal">
                <div class="form-horizontal" style="text-align: center;">
                    <h2>Register Assign Project</h2>
                </div>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label for="TaskName" class="control-label">Task Name:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="AssignByStaffCode" class="control-label">Assign By:</label>
                    <div class="col-md-10">
                        @{
                            var combinedList = ViewBag.CombinedList as List<SelectListItem>;
                        }
                        @Html.DropDownListFor(model => model.AssignByStaffCode, new SelectList(combinedList, "Value", "Text"), "--Select--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AssignByStaffCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="AssignToStaffCode" class="control-label">Assign To:</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.AssignToStaffCode, (IEnumerable<SelectListItem>)ViewBag.AssignTrainer, "--SELECT--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AssignToStaffCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group row">
                            <label for="TaskStartDate" class="control-label col-md-4">Start Date:</label>
                            <div class="col-md-8">
                                <div class="input-group date" id="datepicker" data-target-input="nearest">
                                    <input type="text" name="TaskStartDate" class="form-control datetimepicker-input" data-target="#datepicker" />
                                    <div class="input-group-append" data-target="#datepicker" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="far fa-calendar"></i></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group row">
                            <label for="TaskStartTime" class="control-label col-md-4">Start Time:</label>
                            <div class="col-md-8">
                                <div class="input-group date" id="startTimepicker" data-target-input="nearest">
                                    <input type="text" name="TaskStartTime" class="form-control datetimepicker-input" data-target="#startTimepicker" />
                                    <div class="input-group-append" data-target="#startTimepicker" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="far fa-clock"></i></div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.TaskStartTime, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group row">
                            <label for="TaskEndDate" class="control-label col-md-4">End Date:</label>
                            <div class="col-md-8">
                                <div class="input-group date" id="endDatepicker" data-target-input="nearest">
                                    <input type="text" name="TaskEndDate" class="form-control datetimepicker-input" data-target="#endDatepicker" />
                                    <div class="input-group-append" data-target="#endDatepicker" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="far fa-calendar"></i></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group row">
                            <label for="TaskEndTime" class="control-label col-md-4">End Time:</label>
                            <div class="col-md-8">
                                <div class="input-group date" id="endTimepicker" data-target-input="nearest">
                                    <input type="text" name="TaskEndTime" class="form-control datetimepicker-input" data-target="#endTimepicker" />
                                    <div class="input-group-append" data-target="#endTimepicker" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="far fa-clock"></i></div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.TaskEndTime, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="TaskDescription" class="control-label">Descriptions :</label>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.TaskDescription, new { @class = "form-control", rows = 4 })
                        @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="Priority" class="control-label">Priority :</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Priority, new List<SelectListItem>
                        {
                            new SelectListItem { Text = "High", Value = "High" },
                            new SelectListItem { Text = "Low", Value = "Low" }
                        }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group text-center">
                    <div class="col-md-12">
                        <input type="submit" value="SUBMIT" class="btn btn-primary btn-custom" />
                        <span class="spacer"></span>
                        <input type="reset" value="CLEAR" class="btn btn-secondary btn-custom" id="btnClear" onclick="clearForm()" />
                    </div>
                </div>
            </div>
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </body>
</html>
}