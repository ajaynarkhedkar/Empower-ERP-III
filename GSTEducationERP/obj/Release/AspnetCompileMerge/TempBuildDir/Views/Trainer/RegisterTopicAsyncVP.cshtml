@model GSTEducationERPLibrary.Trainer.Trainer

@{
    ViewBag.Title = "RegisterTopicAsyncVP";
    //Layout = "~/Views/Shared/_LayoutERP.cshtml";
}

<html>
<head>
    @*<script src="~/Content/plugins/jquery/jquery.min.js" type="text/javascript"></script>*@
    <style>

        

        label {
            font-weight: bold;
        }

        .file-container {
            margin-bottom: 10px;
            display: flex;
            align-items: center;
        }

        .delete-icon {
            cursor: pointer;
            color: red;
            margin-left: 10px;
        }

        .btn-save {
            background-color: #28a745;
            color: #fff;
            padding: 10px 20px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
        }

        #fileInputs button {
            background-color: #007bff;
            color: #fff;
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .back-button {
            font-size: 20px;
            margin-right: 5px;
            color: #007bff;
            transition: color 0.3s ease;
            background: none;
            border: none;
            cursor: pointer;
            text-decoration: none;
        }
    </style>
    <style>
        .file-container {
            margin-bottom: 20px;
        }

        .delete-icon {
            cursor: pointer;
            color: red;
            margin-left: 10px;
        }
    </style>

</head>
<body>

    @using (Html.BeginForm("RegisterTopicAsyncVP", "Trainer", FormMethod.Post, new { enctype = "multipart/form-data", id = "yourFormId" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h2>Topic Detail</h2>*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="input-group mb-3">
            <label class="control-label col-md-4">Section Name</label>
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.SectionId, (IEnumerable<SelectListItem>)ViewBag.Section, "--SELECT Section--", new { @class = "form-control col-md-10" })
                @Html.ValidationMessageFor(model => model.SectionId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="input-group mb-3">
            <label class="control-label col-md-4">Topic Name</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.TopicName, new { htmlAttributes = new { @class = "form-control col-md-10" } })
                @Html.ValidationMessageFor(model => model.TopicName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="input-group mb-3">
            <label class="control-label col-md-4">No Of Sessions</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.NoOfSessions, new { htmlAttributes = new { @class = "form-control col-md-10" } })
                @Html.ValidationMessageFor(model => model.NoOfSessions, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="input-group mb-3">
            <label class="control-label col-md-4">Duration</label>
            <input type="text" class="duration-picker" name="Duration" id="Duration">
        </div>
        <div class="input-group mb-3">
            <label class="control-label col-md-4">Topic Description</label>
            <textarea class="form-control col-md-7" name="TopicDescription" maxlength="200" rows="3" placeholder="Enter ..." style="height: 60px;"></textarea>
        </div>
        <div class="input-group mb-1">
            <label class="control-label col-md-4">Assignment File</label>
            <div class="col-md-7">
                <div id="fileInputs">
                    <div class="file-container">
                        <input type="file" name="Files" class="fileInput" multiple />
                        <i class="fa fa-trash delete-icon" onclick="removeFileInput(this)" title="Delete"></i>
                    </div>
                    <button type="button" class="btn btn-primary btn-sm" onclick="addFileInput()">Add More</button>
                </div>
            </div>
        </div>
        <div class="input-group mb-3">
            <label class="control-label col-md-4">Status</label>
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.StatusId, (IEnumerable<SelectListItem>)ViewBag.Status, "--Select Status--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="SaveTopic" value="Save" class="btn btn-success btn-sm" />
            </div>
        </div>
    </div>
    }
    @*<a class="back-button" onclick="goBack()">
        <video width="35" height="35" playsinline loop>
            <source src="~/Content/Admin/icon/back.mp4" type="video/mp4">
        </video>
    </a>*@

    
    @*<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="~/Content/Trainer/js/bootstrap-duration-picker.js"></script>
    <link href="~/Content/Trainer/css/bootstrap-duration-picker.css" rel="stylesheet" />

   
    <script>
        $('.duration-picker').durationPicker({

            formatter: function (s) {
                return s;
            },
            translations: {
                day: 'day',
                hour: 'hour',
                minute: 'minute',
                second: 'second',
                days: 'days',
                hours: 'hours',
                minutes: 'minutes',
                seconds: 'seconds'
            },

            // defines whether to show seconds or not
            showSeconds: false,

            // defines whether to show days or not
            showDays: true,

            onChanged: function (value, isInitializing) {

                console.log(value, isInitializing);
            }
        });
    </script>

    <script>
        function addFileInput() {
            var fileContainer = $('<div class="file-container"></div>');
            var fileInput = $('<input type="file" name="Files" class="fileInput" multiple onchange="validateFile(this)" style="margin-top:10px;"  />');
            var deleteIcon = $('<i class="fa fa-trash delete-icon" onclick="removeFileInput(this)" title="Delete"></i>');

            fileContainer.append(fileInput);
            fileContainer.append(deleteIcon);

            $('#fileInputs').append(fileContainer);
        }

        function removeFileInput(deleteIcon) {
            $(deleteIcon).parent('.file-container').remove();
        }

        function validateFile(fileInput) {
            var selectedFile = fileInput.files[0];
            var fileInputs = $('.fileInput');

            for (var i = 0; i < fileInputs.length; i++) {
                if (fileInputs[i] !== fileInput) {
                    var existingFile = fileInputs[i].files[0];

                    if (existingFile && selectedFile && existingFile.name === selectedFile.name) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'File already added',
                        });
                        fileInput.value = ''; // Clear the selected file
                        return;
                    }
                }
            }
        }
    </script>

    <script>
       // Add the following function to show SweetAlert success message
       function showSuccessMessage() {
           Swal.fire({
               icon: 'success',
               title: 'Success',
               text: 'Topic has been saved successfully!',
           }).then(function () {
                                // Redirect or perform any other action after success
           window.location.href = '@Url.Action("DetailsSectionAsyncVP")';
          });
       }
       function goBack() {
        // Set the desired URL for navigation
        window.location.href = '@Url.Action("DetailsSectionAsyncVP", "Trainer")';
        }
        $(document).ready(function () {
            $('.back-button').mouseenter(function () {
                // Select the video element inside the link and play it
                $(this).find('video')[0].play();
                $(this).addClass('running');
            });

            $('.back-button').mouseleave(function () {
                // Select the video element inside the link and pause it
                var video = $(this).find('video')[0];
                video.pause();
                video.currentTime = 0; // Reset the video to the beginning
                $(this).removeClass('running');
            });

        });

    </script>
    <script>
        $(document).ready(function () {
            $('#SaveTopic').on('click', function (e) {
                e.preventDefault(); // Prevent the default form submission

                // Validate Section Name
                var sectionName = $('#SectionId').val();
                if (sectionName == null || sectionName === "") {
                    showErrorAlert('Please select a Section.');
                    return;
                }

                // Validate Topic Name
                var topicName = $('#TopicName').val();
                if (topicName == null || topicName === "") {
                    showErrorAlert('Please enter a Topic Name.');
                    return;
                }
                // Validate Topic Name
                var NoOfSessions = $('#NoOfSessions').val();
                if (NoOfSessions == null || NoOfSessions === "") {
                    showErrorAlert('Please enter a No Of Session.');
                    return;
                }

                var NoOfSessions = parseInt($('#NoOfSessions').val());
                if (NoOfSessions <= 0 || NoOfSessions > 999 || isNaN(NoOfSessions)) {
                    showErrorAlert('Please enter a valid number of sessions (1-999).');
                    return;
                }

                var duration = $('#Duration').val();
                if (duration == null || duration === "") {
                    showErrorAlert('Please enter a Duration.');
                    return;
                }

                var Status = $('#StatusId').val();
                if (Status == null || Status === "") {
                    showErrorAlert('Please enter a Status.');
                    return;
                }


                // Assuming your form has an ID of 'yourFormId'
                var form = $('#yourFormId');

                var formData = new FormData(form[0]);

                $.ajax({
                    type: 'POST',
                    url: form.attr('action'),
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        if (data.success) {
                            showSuccessMessage();
                        } else {
                            // Optionally, you can handle errors or show a different SweetAlert
                            showErrorAlert('Unable to save the topic.');
                        }
                    },
                    error: function () {
                        // Handle Ajax error if needed
                        showErrorAlert('Unable to communicate with the server.');
                    }
                });
            });

            // Function to show SweetAlert error message
            function showErrorAlert(message) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: message,
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to validate character count
            $('#TopicDescription').on('input', function () {
                var maxLength = 190;
                if ($(this).val().length > maxLength) {
                    $(this).val($(this).val().substring(0, maxLength));
                    Swal.fire({
                        icon: 'warning',
                        title: 'Warning',
                        text: 'You have reached the maximum character limit for the Topic Description.',
                    });
                }
            });
        });

    </script>
</body>
</html>