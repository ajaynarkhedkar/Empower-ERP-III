
@model GSTEducationERPLibrary.Coordinator.Coordinator

@*@{
        ViewBag.Title = "ViewFeeFollowupDetailsAsyncRs";
        //Layout = "~/Views/Shared/_Layout.cshtml";
    }*@


<html>
<head>
    <script src="~/Content/plugins/jquery/jquery.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.3/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.3/dist/sweetalert2.all.min.js"></script>

    <link rel="stylesheet" href="~/Content/plugins/toastr/toastr.min.css" />
    <script src="~/Content/plugins/toastr/toastr.min.js"></script>

    <!-- Bootstrap 4 -->

    <script src="~/Content/plugins/moment/moment.min.js"></script>
    <!-- Tempusdominus Bootstrap 4 -->
    <script src="~/Content/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <script src="~/Content/plugins/daterangepicker/daterangepicker.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#timepicker').datetimepicker({
                format: 'LT'
            });

            $('#reservationdate').datetimepicker({
                format: 'YYYY-MM-DD',
                minDate: moment().startOf('day')
            });

            $('#reservationdatetime').datetimepicker({ icons: { time: 'far fa-clock' } });
    </script>
    <script>
        $(document).ready(function () {
            $('#saveButton').click(async function (event) {
                debugger;
                event.preventDefault();
                var staffCode = $('#StaffCode').val();
                var followUpNote = $('#FollowUpNote').val();
                var nextInstallmentDate = $('#NextInstallmentDate').val();
                var nextFollowUpDate = $('#NextFollowUpDate').val();
                var statusId = $('#StatusId').val();

                var studentCode = $('#StudentCode').val().trim();


                if (staffCode.trim() === '' || followUpNote.trim() === '' || nextInstallmentDate.trim() === '' || nextFollowUpDate.trim() === '' || statusId.trim() === '') {
                    Swal.fire('Error', 'Please fill in all fields.', 'error');
                    return;
                }

                Swal.fire({
                    title: 'Are you sure?',
                    text: 'You are about to save your followUp.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, save it!'
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        var formData = new FormData();
                        formData.append('StudentCode', studentCode);
                        formData.append('StaffCode', staffCode);
                        formData.append('FollowUpNote', followUpNote);
                        formData.append('NextInstallmentDate', nextInstallmentDate);
                        formData.append('NextFollowUpDate', nextFollowUpDate);
                        formData.append('StatusId', statusId);

                        try {
                            debugger;
                            var response = await fetch('/Coordinator/AddFeeFollowUpDetailsAsyncRS', {
                                method: 'POST',
                                body: formData
                            });

                            if (response.ok) {
                                displayToast('Data Saved Successfully.', 'success');
                                window.location.href = '/Coordinator/ListAddedFeeFollowupAsyncRs';
                            } else {
                                displayToast('Error saving followup data. Please try again.', 'error');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            displayToast('An unexpected error occurred. Please try again later.', 'error');
                        }
                    }
                });
            });
        });

        function displayToast(message, type) {
            toastr[type](message);
        }

        toastr.options = {
            closeButton: true,
            progressBar: true,
            positionClass: 'toast-top-right',
            showMethod: 'slideDown',
            timeOut: 4000
        };
    </script>

    <script>
        $(document).ready(function () {

            $('#clearButton').click(function () {

                $('input[type=text], input[type=email], textarea, select').val('');


                $('.datepicker').val('');
                var presentDate = new Date().toISOString().slice(0, 10);
                $('input[type=date]').val(presentDate);


                displayToast('Form cleared successfully.', 'info');
            });
        });

    </script>
    <script>
        document.getElementById('NextFollowUpDate').addEventListener('change', function () {
            var nextInstallmentDate = document.getElementById('NextInstallmentDate').value;
            var nextFollowUpDate = this.value;

            if (new Date(nextFollowUpDate) <= new Date(nextInstallmentDate)) {
                alert('Next Follow-Up Date must be after Next Installment Date');
                this.value = '';
            }
        });
    </script>

    <style>
        /* Add a custom style to adjust the width */
        .form-control.datetimepicker-input {
            width: 50%; /* Set the desired width */
        }
    </style>


</head>
<body>
    <h2> Add fee FollowUp </h2>
    <div>
        <hr />
        <br />
        <div class="card " style="padding:5px;margin-right:20px;margin-left:10px; margin-top:-15px">

            <div hidden>
                @Html.DisplayNameFor(model => model.StudentId)
                @Html.DisplayFor(model => model.StudentId)
            </div>
            <input type="hidden" id="StudentCode" value="@Model.StudentCode" />

            <div class="form-group row">
                <label class="control-label col-md-4" style="margin-left: 40px;">Student Name</label>
                <div class="col-md-6">
                    @Model.FullName
                </div>
            </div>

            <div class="form-group row">
                <label class="control-label col-md-4" style="margin-left: 40px;">Remaining Fee</label>
                <div class="col-md-6">
                    @Model.RemainingFee
                </div>
            </div>


            <div class="form-group row">
                <label class="control-label col-md-4" style="margin-left: 40px;">Installment Amount</label>
                <div class="col-md-6">
                    @Model.Amount
                </div>
            </div>
            <div class="form-group row">
                <label class="control-label col-md-4" style="margin-left: 40px;">Follow Up taken By</label>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.StaffCode, new SelectList(ViewBag.StaffList, "Value", "Text"), "---Select---", new { @class = "form-control", id = "StaffCode" })
                    @Html.ValidationMessageFor(model => model.StaffCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <label class="control-label col-md-4" style="margin-left: 40px;">Status</label>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.StatusId, new SelectList(ViewBag.StatusList, "Value", "Text"), "---Select---", new { @class = "form-control", id = "StatusId" })
                    @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group row">
                <label class="control-label col-md-4" style="margin-left: 40px;">Follow-Up Note</label>
                <div class="col-md-6">
                    @Html.TextAreaFor(model => model.FollowUpNote, new { @class = "form-control", rows = "3", maxlength = "250", id = "FollowUpNote", placeholder = "Please enter your text here" })
                    @Html.ValidationMessageFor(model => model.FollowUpNote, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="control-label col-md-4" style="margin-left: 40px;">Next Installment Date</label>
                <div class="col-md-6">
                    <input type="date" class="form-control col-md-12 datepicker" id="NextInstallmentDate" name="NextInstallmentDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")" required />
                    @Html.ValidationMessageFor(model => model.NextInstallmentDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <label class="control-label col-md-4" style="margin-left: 40px;">Next Follow-Up Date</label>
                <div class="col-md-6">
                    <input type="date" class="form-control col-md-12 datepicker" id="NextFollowUpDate" name="NextFollowUpDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" min="@Model.NextInstallmentDate.ToString("yyyy-MM-dd")" required />
                    @Html.ValidationMessageFor(model => model.NextFollowUpDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 text-center">
                <input type="button" class="btn btn-success" value="Save" id="saveButton" style="margin-right:20px" />
                <input type="button" class="btn btn-warning" value="Clear" id="clearButton" style=" margin-right:20px" />
            </div>

        </div>
    </div>
    <button class="close text-danger" data-dismiss="modal" style="position: absolute; top: 8px; right: 8px;">&times;</button>





</body>
</html>
