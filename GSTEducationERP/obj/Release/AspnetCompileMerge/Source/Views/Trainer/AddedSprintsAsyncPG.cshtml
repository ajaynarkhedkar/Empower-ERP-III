@model GSTEducationERPLibrary.Trainer.Trainer

<style>
    h2 {
        padding-top: 10px;
        margin-bottom: 10px;
        font-family: Verdana;
        font-weight: bold;
        font-size: medium;
        color: #33CCCC;
    }

    body {
        background-color: #f8f9fa;
    }

    .container {
        max-width: 800px;
        margin: 20px auto;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
        border-radius: 8px;
    }

    .card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
    }

    .highlighted {
        color: #007bff;
        font-weight: bold;
    }

    .sprint-status {
        display: flex;
        justify-content: center;
    }

    .row {
        display: flex;
        justify-content: space-around;
        margin-top: 20px;
    }

    .sprint {
        text-align: center;
        margin-bottom: 20px;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #fff;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
    }

        .sprint label {
            display: block;
            font-weight: bold;
            margin-bottom: 10px;
        }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
        width: 120px;
        border: 1px solid #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border: 1px solid #0056b3;
        }

    .button-style {
        display: inline-block;
        padding: 10px 20px;
        background-color: #007bff;
        color: #fff;
        text-decoration: none;
        border-radius: 4px;
        border: 1px solid #007bff;
    }

        .button-style:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

    .highlighted {
        color: #007bff;
    }

    .label {
        font-weight: bold;
    }
</style>
<script src="~/Content/plugins/jquery/jquery.min.js"></script>
<script src="~/Content/plugins/sweetalert2/sweetalert2.all.min.js"></script>
<script>
    var assignProjectId = @Html.Raw(Json.Encode(ViewBag.AssignProjectId));
    var statusId = @Html.Raw(Json.Encode(ViewBag.StatusId));
    var CandidateCode= @Html.Raw(Json.Encode(ViewBag.CandidateCode));

    function disableButtons() {
        if (statusId >= 52) {
            $('#btnSprint1').prop('disabled', true);
        }
        if (statusId >= 53) {
            $('#btnSprint2').prop('disabled', true);
        }
        if (statusId === 54) {
            $('#btnSprint3').prop('disabled', true);
        }
    }
 function completeSprint(sprintNumber) {
        var button = $('#btnSprint' + sprintNumber);

     for (var i = 1; i < sprintNumber; i++) {
         if (!$('#btnSprint' + i).prop('disabled')) {
             Swal.fire({
                 title: 'Permission Denied',
                 text: 'Complete Sprint ' + i + ' first!',
                 icon: 'error',
                 confirmButtonColor: '#3085d6',
                 confirmButtonText: 'OK'
             });
             return;
         }
     }

        // If all previous sprints are completed, proceed to complete current sprint
        $.ajax({
            url: '/Trainer/UpdateSprintStatus',
            type: 'POST',
            data: { assignProjectId: assignProjectId, sprintNumber: sprintNumber, CandidateCode: CandidateCode },
            success: function (data) {
                if (data.success) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Are you sure?',
                        text: 'Sprint ' + sprintNumber + ' completed successfully.',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, submit it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            button.prop('disabled', true);
                            updateStatus(sprintNumber);
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error updating sprint status: ' + data.message
                    });
                }
            },
            error: function (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error updating sprint status: ' + error
                });
            }
        });
    }

    document.addEventListener("DOMContentLoaded", function () {
        disableButtons();
    });
</script>
<div class="container">
    <h2>Complete Assign Project Sprint</h2>
    <br />
    <div class="card trainer-project-info">
        <h5 class="font-weight-bolder">
            <span class="label">Project Name -</span>
            <span class="highlighted">@ViewBag.ProjectName</span>
        </h5>
        <h5><span class="label">Project Owner Name -</span> <span>@ViewBag.ProjectOwnerName</span></h5>
        <h5><span class="label">Scrum Master -</span> <span>@ViewBag.ScrumMaster</span></h5>
        <h5><span class="label">Project Start Date -</span> <span>@ViewBag.StartDate</span></h5>
        <h5 hidden><span class="label">Candidate -</span> <span> @ViewBag.CandidateCode</span></h5>
    </div>
    @Html.HiddenFor(model => model.AssignProjectId)
    <div class="card sprint-status" id="StatusChangeid">
        <div>
            <div class="row">
                <div class="sprint">
                    <label>Sprint 1:</label>
                    <button id="btnSprint1" class="btn btn-primary" onclick="completeSprint(1)">Completed</button>
                </div>

                <div class="sprint">
                    <label>Sprint 2:</label>
                    <button id="btnSprint2" class="btn btn-primary" onclick="completeSprint(2)">Completed</button>
                </div>

                <div class="sprint">
                    <label>Sprint 3:</label>
                    <button id="btnSprint3" class="btn btn-primary" onclick="completeSprint(3)">Completed</button>
                </div>
            </div>
        </div>
    </div>
    <a href="@Url.Action("ListAllAssignedProjectAsyncPG")" class="back-link" title="Back to List">
        <video width="45" height="45" playsinline loop>
            <source src="~/Content/Admin/icon/Back.mp4" type="video/mp4" />
        </video>
    </a>
</div>