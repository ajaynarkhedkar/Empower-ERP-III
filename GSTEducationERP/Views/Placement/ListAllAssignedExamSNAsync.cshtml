
@{
	ViewBag.Title = "AllExamsAsync";
	Layout = "~/Views/Shared/_LayoutERP.cshtml";
}

<html>
<head>
	<link href="~/Content/plugins/bootstrap-switch/css/bootstrap3/bootstrap-switch.min.css" rel="stylesheet" />

	<script src="~/Content/plugins/jquery/jquery.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/bootstrap/js/bootstrap.bundle.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
	<link rel="stylesheet" href="~/Content/Admin/css/UI.css" />
	<link rel="stylesheet" href="~/Content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
	<link rel="stylesheet" href="~/Content/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
	<link rel="stylesheet" href="~/Content/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
	<style>
		.card-primary.card-outline-tabs > .card-header a.active {
			border-top: 3px solid #01a6a6;
		}

		.card.card-outline-tabs .card-header a:hover {
			color: #01a6a6;
		}

		.card-primary.card-outline-tabs > .card-header a.active, .card-primary.card-outline-tabs > .card-header a.active:hover {
			border-top: 3px solid #01a6a6;
		}
	</style>
	<style>
		.dataTables_wrapper .btn-secondary {
			color: #235;
			background-color: transparent !important;
			border-color: transparent;
			font-size: x-large;
			margin: 0px !important;
		}

		h2 {
			padding-top: 10px;
			margin-bottom: 10px;
			font-family: Verdana;
			font-weight: bold;
			font-size: medium;
			color: #33CCCC;
		}

		.card-primary.card-outline-tabs > .card-header a.active {
			border-top: 3px solid #33CCCC;
		}

		a {
			color: #33CCCC;
		}

		.card.card-outline-tabs .card-header a:hover {
			color: #33CCCC;
		}

		.card-primary.card-outline-tabs > .card-header a.active, .card-primary.card-outline-tabs > .card-header a.active:hover {
			border-top: 3px solid #33CCCC;
		}

		.card-body {
			font-family: Calibri !important;
			padding-bottom: 0px !important;
		}

		tr:nth-child(even) {
			background-color: #f2f2f2;
		}

		th {
			background-color: #33CCCC;
			color: #000;
			text-align: center !important;
		}

		td {
			text-align: center;
			color: black !important;
		}

		.table td {
			padding: 0px 0px 0px 0px !important;
			font-size: 14px !important;
		}

		.table th {
			padding: 5px 5px 4px 10px !important;
			font-size: 14px !important;
		}

		table.dataTable > thead .sorting:after, table.dataTable > thead .sorting:before {
			font-size: xx-small !important;
		}

		div.dataTables_wrapper div.dataTables_filter {
			margin-top: -40px !important;
		}

		div.dt-buttons {
			margin-top: -20px !important;
		}

		.btn-group > .btn:not(:last-child):not(.dropdown-toggle), .btn-group > .btn-group:not(:last-child) > .btn {
			padding-left: 5px !important;
			padding-right: 5px !important;
		}

		div.dataTables_wrapper div.dataTables_filter label {
			font-size: small !important;
		}

		div.dataTables_wrapper div.dataTables_filter input {
			height: 20px !important;
		}

		div.dataTables_wrapper div.dataTables_info {
			padding: 0px !important;
			font-size: small !important;
		}

		div.dataTables_wrapper div.dataTables_paginate ul.pagination {
			margin-top: -20px !important;
		}

		div.dataTables_wrapper div.dataTables_paginate {
			font-size: small !important;
		}
		.container, .container-lg, .container-md, .container-sm, .container-xl {
			max-width: none !important;
		}
	
	</style>
	<style>
		/* Style for the empty space when switch is off (External) */

		.bootstrap-switch.bootstrap-switch-inverse.bootstrap-switch-on .bootstrap-switch-label, .bootstrap-switch.bootstrap-switch-off .bootstrap-switch-label {
			background-color: #DCDCDC !important; /* Replace with your desired color */
		}
		.bootstrap-switch.bootstrap-switch-inverse.bootstrap-switch-off .bootstrap-switch-label, .bootstrap-switch.bootstrap-switch-on .bootstrap-switch-label {
			background-color: #DCDCDC !important; /* Replace with your desired color */
		}
	</style>
</head>
<body style="margin: 0; padding: 0;">
	<br />

	<div class="card " style="padding: 10px;">

		<div class="row g-6 justify-content-between">
			<div class="col-8">
				<h2>Exams</h2>
			</div>
			<div class="col-md-4 text-right">
				<input type="checkbox" id="type" name="StudentType" checked data-bootstrap-switch data-off-color="primary" data-on-color="blue" data-on-text="Internal" data-off-text="External">
			</div>
		</div>
		<hr />
		<div class="container" style="margin-left:-10px">
			<div class="row">
				<div class="col-6" style="margin-top:25px;">
					<div class="card card-primary card-outline card-outline-tabs">
						<div class="card-header p-0 border-bottom-0">
							<ul class="nav nav-tabs" id="custom-tabs-four-tab" role="tablist">
								<li class="nav-item" style="width: 25%;">
									<a class="nav-link active" id="assignedTab" data-toggle="tab" href="#Assigned">Assigned</a>
								</li>
								<li class="nav-item" style="width: 25%;">
									<a class="nav-link" id="pendingTab" data-toggle="tab" href="#pending">Pending</a>
								</li>
								<li class="nav-item" style="width: 25%;">
									<a class="nav-link" id="conductedTab" data-toggle="tab" href="#conducted">Conducted</a>
								</li>
								<li class="nav-item" style="width: 25%;">
									<a class="nav-link" id="allExamTab" data-toggle="tab" href="#allExam">Exam Papers</a>
								</li>
							</ul>
						</div>
					</div>
				</div>
				<div class="col-6">
					<div class="input-group">
						<div class="form-group col-md-4" >
							<div id="CourseSection">
								<label>Course</label>
								<select id="SelectedCourse" class="form-control">
									@foreach (var item in ViewBag.Courses)
									{
										<option value="@item.Value">@item.Text</option>
									}
								</select>
							</div>
						</div>
						<div class="col-md-8 row">
							<div class="form-group col-md-6">
									<label>Start Date</label>
								<input type="date" class="form-control" id="startDate" name="startDate">
							</div>
							<div class="form-group col-md-6">
									<label>End Date</label>
									<input type="date" class="form-control" id="endDate" name="endDate">

							</div>
						</div>
					</div>
					</div>
				</div>
			</div>
		<div id="ExamList"></div>
	</div>

	<script src="~/Content/plugins/datatables/jquery.dataTables.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/datatables-responsive/js/dataTables.responsive.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/datatables-responsive/js/responsive.bootstrap4.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/datatables-buttons/js/dataTables.buttons.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/datatables-buttons/js/buttons.bootstrap4.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/jszip/jszip.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/pdfmake/pdfmake.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/pdfmake/vfs_fonts.js" type="text/javascript"></script>
	<script src="~/Content/plugins/datatables-buttons/js/buttons.html5.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/datatables-buttons/js/buttons.print.min.js" type="text/javascript"></script>
	<script src="~/Content/plugins/datatables-buttons/js/buttons.colVis.min.js" type="text/javascript"></script>
	<script>
		jQuery(document).ready(function ($) {

			var today = new Date();

			// Calculate one year before the current date
			var oneYearBefore = new Date();
			oneYearBefore.setFullYear(today.getFullYear() - 1);

			// Calculate the end date as the next month date
			var endDate = new Date();
			endDate.setMonth(today.getMonth() + 1);
			endDate.setDate(1); // Set the date to the first day of the next month

			// Format dates as YYYY-MM-DD strings
			var startDate = formatDate(oneYearBefore);
			var formattedEndDate = formatDate(endDate);

			// Set the values of start date and end date inputs
			$('#startDate').val(startDate);
			$('#endDate').val(formattedEndDate);

			// Other JavaScript code goes here...

			// Function to format date as YYYY-MM-DD
			function formatDate(date) {
				var month = String(date.getMonth() + 1).padStart(2, '0');
				var day = String(date.getDate()).padStart(2, '0');
				var year = date.getFullYear();

				return year + '-' + month + '-' + day;
			}



			$('input[name="StudentType"]').bootstrapSwitch();
			loadTabContent('@Url.Action("ListAssignedExamIntSNAsync", "Placement")', 25);

			$('input[name="StudentType"]').on('switchChange.bootstrapSwitch', function (event, state) {
            if (state) {
                // Internal state
				loadTabContent('@Url.Action("ListAssignedExamIntSNAsync", "Placement")', 25);
				$("#assignedTab").addClass("active");
				$("#pendingTab").removeClass("active");
				$("#conductedTab").removeClass("active");
				$("#allExamTab").removeClass("active");
				$('#CourseSection').show(); // Show the course dropdown
            } else {
                // External state
				loadTabContent('@Url.Action("ListAssignedExamExtSNAsync", "Placement")', 25);
				$("#assignedTab").addClass("active");
				$("#pendingTab").removeClass("active");
				$("#conductedTab").removeClass("active");
				$("#allExamTab").removeClass("active");
				$('#CourseSection').hide(); // Hide the course dropdown

            }
        });
		$("#assignedTab").click(function () {

			if ($('input[name="StudentType"]').bootstrapSwitch('state')) {
				loadTabContent('@Url.Action("ListAssignedExamIntSNAsync", "Placement")', 25);

            }
            else {
				loadTabContent('@Url.Action("ListAssignedExamExtSNAsync", "Placement")', 25);
				$('#CourseSection').hide();
			}
		});
			$("#pendingTab").click(function () {

				if ($('input[name="StudentType"]').bootstrapSwitch('state')) {
					loadTabContent( '@Url.Action("ListPendingExamIntSNAsync", "Placement")',6);
				}
				else {
					loadTabContent('@Url.Action("ListPendingExamExtSNAsync", "Placement")', 6);
					$('#CourseSection').hide();
				}
			});
			$("#conductedTab").click(function () {

				if ($('input[name="StudentType"]').bootstrapSwitch('state')) {
					loadTabContent('@Url.Action("ListConductedExamIntSNAsync", "Placement")',13);
				}
				else {
					loadTabContent('@Url.Action("ListConductedExamExtSNAsync", "Placement")', 13);
					$('#CourseSection').hide();
				}
			});

			$("#allExamTab").click(function () {
				loadTabContent('@Url.Action("ListAllExamsSNAsync", "Placement")');
				$('#CourseSection').show();
			});

			function loadExams(tabContentUrl) {
				$.ajax({
					url: tabContentUrl,
					type: 'GET',
					success: function (data) {
						$('#loadAssignExam').html(data);
					},
					error: function () {
						alert('Error loading content.');
					}
				});
			}


			function loadTabContent(tabContentUrl, statusId) {
				var courseCode = $('#SelectedCourse').val();
				var startDate = $('#startDate').val();
				var endDate = $('#endDate').val();
            $.ajax({
				url: tabContentUrl,
				data: {
					courseCode: courseCode,
					startDate: startDate,
					endDate: endDate,
					id: statusId
				},
                type: 'GET',
                success: function (data) {
					$('#ExamList').html(data);
					var table = $('#ExamList table').DataTable({
                        "responsive": true,
                        "lengthChange": false,
                        "autoWidth": false,
						"stateSave": true,
						"dom": 'Bfrtip',
						"buttons": [
							{
								extend: 'copy',
								text: '<img src="/Content/Admin/icon/copy.png" title="Copy" alt="Copy" height="20" width="20" />',
								titleAttr: 'Copy'
							},
							{
								extend: 'csv',
								text: '<img src="/Content/Admin/icon/csv.jpg" title="CSV" alt="CSV" height="25" width="25" />',
								titleAttr: 'CSV'
							},
							{
								extend: 'excel',
								text: '<img src="/Content/Admin/icon/xls-file.png" title="xls" alt="xls" height="20" width="20" />',
								titleAttr: 'Excel'
							},
							{
								extend: 'pdf',
								text: '<img src="/Content/Admin/icon/pdf-file.png" title="pdf" alt="pdf" height="20" width="20" />',
								titleAttr: 'PDF'
							},
							{
								extend: 'print',
								text: '<img src="/Content/Admin/icon/printer.png" title="printer" alt="printer" height="20" width="20" />',
								titleAttr: 'Print'
							},
							{
								extend: 'colvis',
								text: '<img src="/Content/Admin/icon/column.jpg" title="column" alt="column" height="20" width="20" />',
								titleAttr: 'Columns'
							}
						]
					});
					table.buttons().container().appendTo('#InterviewList .col-md-6:eq(0)');
				},
				error: function () {
					alert('Error loading content.');
				}
			});
			}

			// Function to handle change in course or date inputs
function handleInputChange() {
    var tabContentUrl = ''; // Define the URL based on the active tab and switch state
    var statusId = 0; // Define the status ID based on the active tab
    var activeTabId = $('.nav-tabs .nav-item .active').attr('id');

    // Check the active tab and switch state to determine the URL and status ID
    switch (activeTabId) {
        case 'assignedTab':
            tabContentUrl = $('input[name="StudentType"]').bootstrapSwitch('state') ? '@Url.Action("ListAssignedExamIntSNAsync", "Placement")' : '@Url.Action("ListAssignedExamExtSNAsync", "Placement")';
            statusId = 25;
            break;
        case 'pendingTab':
            tabContentUrl = $('input[name="StudentType"]').bootstrapSwitch('state') ? '@Url.Action("ListPendingExamIntSNAsync", "Placement")' : '@Url.Action("ListPendingExamExtSNAsync", "Placement")';
            statusId = 6;
            break;
        case 'conductedTab':
            tabContentUrl = $('input[name="StudentType"]').bootstrapSwitch('state') ? '@Url.Action("ListConductedExamIntSNAsync", "Placement")' : '@Url.Action("ListConductedExamExtSNAsync", "Placement")';
            statusId = 13;
            break;
        case 'allExamTab':
            tabContentUrl = '@Url.Action("ListAllExamsSNAsync", "Placement")';
            break;
        default:
            break;
    }

    // Load the tab content with the determined URL and status ID
    loadTabContent(tabContentUrl, statusId);
}

// Event listener for course or date input change
$('#SelectedCourse, #startDate, #endDate').on('change', function () {
    handleInputChange();
});

    });
	</script>
</body>
</html>


