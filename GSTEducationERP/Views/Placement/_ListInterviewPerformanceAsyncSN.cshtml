
@model GSTEducationERPLibrary.Placement.Placement
@functions {
	string GetBadgeClass(string round)
	{
		switch (round)
		{
			case "Selected":
				return "bg-success";
			case "Scheduled":
				return "bg-primary";
			case "Rejected":
			case "Cancelled":
				return "bg-danger";
			case "InProcess":
			case "Not Attended":
			case "No Feedback":
				return "bg-warning";
			case "Offered":
				return "bg-blue";
			default:
				return ""; // Add a default class if needed
		}
	}
}
<html>
<head>
	<style>
		div.dt-buttons {
			visibility: hidden;
		}
		div.dataTables_wrapper div.dataTables_filter {
			margin-top:-10px !important;
		}
		#InterviewPerformance.table td {
			padding: 0 !important;
		}

	</style>

</head>
<body>

	<div class="row">
		<div class="col-md-6">
			<div class="card">
				<div class="card-body">

					<table id="InterviewPerformance" class="table table-bordered table-striped">
						<thead>
							<tr>
								<th hidden></th>
								<th>
									@Html.DisplayNameFor(model => model.StudentName)
								</th>
								<th>
									@Html.DisplayNameFor(model => model.Experience)
								</th>
								<th>
									@Html.DisplayNameFor(model => model.Location)
								</th>
								<th>
									@Html.DisplayNameFor(model => model.Status)
								</th>
								<th>
									Action
								</th>
							</tr>
						</thead>
						<tbody>

							@if (Model != null && Model.lstInterviewPerformance != null)
							{
								for (int i = 0; i < Model.lstInterviewPerformance.Count; i++)
								{
									var item = Model.lstInterviewPerformance[i];
									<tr>
										<td hidden>
											@Html.HiddenFor(modelItem => item.StudentCode)
										</td>
										<td>
											@Html.DisplayFor(modelItem => item.StudentName)
										</td>
										<td>
											@Html.DisplayFor(modelItem => item.Experience)
										</td>
										<td>
											@Html.DisplayFor(modelItem => item.Location)
										</td>
										<td>
											<span class="badge @(GetBadgeClass(item.Status))">@Html.DisplayFor(modelItem => item.Status)</span>
										</td>
										<td style="text-align: center;">
											<a href="#" class="icon" data-toggle="tooltip" title="View Details" data-studentCode="@item.StudentCode" onclick="updateSecondCard('@item.StudentCode')">
												<video width="25" height="25" playsinline loop>
													<source src="~/Content/Admin/icon/view.mp4" type="video/mp4">
												</video>
											</a>
										</td>

									</tr>
								}
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
		<div class="col-md-6">
			<div class="card">
				<div id="secondCard" style="display: none;"></div>
			</div>
		</div>
	</div>
	@*<script src="~/Content/Admin/js/Icon.js"></script>*@
	<script src="~/Content/plugins/jquery/jquery.min.js" type="text/javascript"></script>
	<script>

		function updateSecondCard(studentCode) {

			// Use AJAX to fetch data based on the student code
			$.ajax({
				url: '/Placement/ListAllInterviewRoundAsyncSN', // Replace with the actual controller and action
				type: 'GET',
				data: { studentCode: studentCode },
				success: function (data) {
					// Update the content of the second card
					$('#secondCard').html(data);
					// Show the second card
					$('#secondCard').show();
				},
				error: function (error) {
					console.error('Error fetching data:', error);
				}
			});
		}
	</script>

	<script>
		function toggleSecondCardVisibility() {
			var secondCard = document.getElementById("secondCard");
			if (secondCard.style.display === "none" || secondCard.style.display === "") {
				secondCard.style.display = "block";
			} else {
				secondCard.style.display = "none";
			}
		}
	</script>


</body>
</html>

