@model GSTEducationERPLibrary.Bind.Bind

@{
    ViewBag.Title = "MergeBatchStudentAsyncST";
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
}
<br>

<html>
<head>
    <script src="~/Content/plugins/jquery/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="~/Content/plugins/fontawesome-free/css/all.min.css" rel="stylesheet" />
    <style>
        h2 {
            color: #64bbc9;
            font-weight: bold;
            font-size: 30px;
            margin-left: 17px;
            margin-bottom: -10px;
            font-family: sans-serif;
        }
        h3 {
            color: #64bbc9;
            font-weight: bold;
            font-size: 30px;
            margin-left: 17px;
            margin-bottom: -10px;
            font-family: sans-serif;
        }
        a {
            color: #01a6a6;
        }

        img {
            color: #64bbc9;
            font-weight: bold;
            font-size: 30px;
            margin-left: 17px;
            margin-bottom: -10px;
            font-family: sans-serif;
        }
        .student-item {
            display: flex;
            align-items: center;
            margin-bottom: 5px; /* Adjust this margin as needed for spacing between student items */
        }

            .student-item input {
                margin-right: 5px; /* Adjust this margin as needed for spacing between checkbox and label */
            }
        .scrollable-container {
            max-height: 130px; /* Set the maximum height for the container */
            overflow-y: auto; /* Enable vertical scrollbar */
        }
    </style>
</head>
<body>
    @*//POPUP*@
    <div id="partialModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="BatchModalLabel" style="position: center; padding: 15px; margin-right: 900px; margin-left: -210px; margin-top: -15px">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="margin-right: 350px; margin-left: 150px; width: 800px;">
                <!-- Adjust width as needed -->
                <div class="modal-header">
                    <h3 class="modal-title " id="BatchModalLabel">Merge Batch To Batch Student</h3>
                    <button class="close text-danger" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body" style="margin-right: 400px; margin-left: 200px;">
                    <!-- Your modal body content goes here -->
                </div>
                <div class="modal-footer">
                    <!-- Your modal footer content goes here -->
                </div>
            </div>
        </div>
    </div>


    @using (Html.BeginForm("MergeBatchStudentAsyncST", "Bind", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <br>
        <div class="container" style=" margin-top:-55px">
            <div class="card mt-4">
                <div class="card-header">
                    <h2>Merge Batch Student</h2>
                    <div class="add-buttons">
                        <button class="btn btn-custom" style="font-weight:bold; float:right">
                            <img src="~/Content/Coordinator/img/Merge.png" id="Detailes" data-toggle="tooltip" data-placement="top" title="Marge BatchToBatch" alt="Marge BatchToBatch" style="width: 35px; height: 30px; ">
                        </button>
                    </div>
                </div>
                <div class="card-body">


                    <br>
                    <br>
                    <div class="row g-3">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="col-md-2"></div>
                        <div class="col-md-4">
                            <label class="col-md-12">Select Batch</label>
                            @Html.HiddenFor(model => model.SelectStudentCode)
                            @Html.HiddenFor(model => model.SelectNoOfStudent)
                            @Html.HiddenFor(model => model.AddStudentCode)
                            @Html.HiddenFor(model => model.AddNoOfStudent)

                            @Html.DropDownListFor(model => model.SelectBatch, new SelectList(ViewBag.Batch, "value", "Text"), "---select---", new { @class = "form-control form-select SelectBatch", @id = "SelectBatch" })
                            @Html.ValidationMessageFor(model => model.SelectBatch, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-md-4">
                            <label class="col-md-6">Add Batch</label>
                            <select id="AddBatch" name="AddBatch" class="form-control"></select>
                            @Html.ValidationMessageFor(model => model.AddBatch, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2"></div>
                        <div class="col-md-2"></div>
                        <div class="col-md-4">
                            <label class="col-md-6"> <b>Select Student</b></label>
                            <div class="card scrollable-container mx-auto" style="width: 300px;  margin-top: 20px; border-radius: 10px;  background-color: whitesmoke; position: relative !important; ">
                                <div id="SelectStudent"></div>
                                @Html.ValidationMessageFor(model => model.SelectStudent, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-1">
                            <div>
                                    <img src="~/Content/Coordinator/img/right-arrow.png" id="SelectCheckStudent" style="width: 35px; height: 30px; margin-top: 80px ">
                                
                                <br>
                                
                                    <img src="~/Content/Coordinator/img/left-arrow (1).png" id="AddCheckStudent" style="width: 35px; height: 30px; margin-top: 30px ">
                              
                            </div>
                        </div>

                        <div class="col-md-4">
                            <label class="col-md-6"> <b>Add Student</b></label>
                            <div class="card scrollable-container mx-auto" style="width: 300px;  margin-top: 20px; border-radius: 10px;  background-color: whitesmoke; position: relative !important;  ">
                                <div class="checkbx-column" id="list" style="scroll-margin-left:50px;">
                                    <div id="AddStudent"></div>
                                    @Html.ValidationMessageFor(model => model.AddStudent, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br>
                        <br>
                        <div class="form-group col-md-12 text-center">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" style="margin-top: 80px; margin-left: 150px; " value="Save" id="BMStud" class="btn btn-success btn-sm" />
                                <input type="button" style="margin-top: 80px;" value="Cancel" id="cancelButton" class="btn btn-danger btn-sm" onclick="showCancelConfirmation()" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <a data-toggle="tooltip" data-placement="top" title="Back" alt="Back" style="width: 60px; height: 35px; border: 0; margin-block-start: 0px;" onclick="location.href = '@Url.Action("ListAllBatchAsyncST", "Bind")'">
                                <video width="35" height="35" playsinline loop>
                                    <source src="~/Content/Admin/icon/Back.mp4" type="video/mp4">
                                </video>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
<script>
    function showCancelConfirmation() {
        // Using SweetAlert for confirmation
        Swal.fire({
            title: 'Are you sure?',
            //text: 'You will not be able to undo this action!',
            icon: 'warning',
            //showCancelButton: true,
            confirmButtonColor: '#d33',
            //cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, cancel it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Add any form cancellation logic here if needed

                // Redirect to the specified URL
                window.location.href = '@Url.Action("ListAllBatchAsyncST", "Bind")';
            }
        });
    }
</script>

    <script type="text/javascript">
        $(function () {
            $("#Detailes").click(function () {
                var $buttonClicked = $(this);

                $.ajax({
                    type: "GET",
                    url: "/Bind/MergeBatchToBatchStudentAsyncST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        $("#partialModal").find(".modal-body").html(response);
                        $("#partialModal").modal('show');
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });

                // Prevent modal from closing immediately
                return false;
            });
        });
    </script>
    @*------- After Select Batch Select show students in Select Student Card-----------------*@

    <script>
        $(document).ready(function () {
            $(".SelectBatch").change(function () {
                var id = $(this).val();
                $("#SelectStudent").empty();
                $.ajax({
                    url: "/Bind/SelectBatchStudNameAsyncST",
                    type: "GET",
                    data: { SelectBatch: id },
                    success: function (data) {
                        var SelectStudent = $("#SelectStudent");
                        SelectStudent.empty();
                        $.each(data, function (index, v1) {
                            $("#SelectStudent")
                                .append(`<input type="checkbox" id="${v1.Value}" name="${v1.Text}" value="${v1.Value}" Text="${v1.Text}"/*style=" visibility: hidden;"*/>`)
                                .append(`<label value="${v1.Value}">${v1.Text}</label><br>`)

                        });
                    }
                });
            });
        });
    </script>
    @*-------  After Add Batch Select show students in Add Student Card-----------------*@
    <script>
        $(document).ready(function () {
            $("#AddBatch").change(function () {
                var id1 = $(this).val();
                $.ajax({
                    url: "/Bind/AddBatchStudNameAsyncST",
                    type: "GET",
                    data: { AddBatch: id1 },
                    success: function (data) {
                        var AddStudent = $("#AddStudent");
                        AddStudent.empty();
                        $.each(data, function (index, v1) {
                            $("#AddStudent")
                                .append(`<input type="checkbox" id="${v1.Value}" name="${v1.Text}" value="${v1.Value}" Text="${v1.Text}">`)
                                .append(`<label for="${v1.Text}">${v1.Text}</label><br>`);

                        });
                    }

                });
            });
        });
    </script>
    @*-------  Transfer Student AddStudent Card to SelectStudent  Card-----------------*@

    <script>
        $(document).ready(function () {
            $("#AddCheckStudent").click(function () {
                var atLeastOneChecked = false;
                var SelectBatch = $('#SelectBatch').val();
                var uncheckedValues = "";
                var count1 = 0;

                var AddBatch = $('#AddBatch').val();
                var uncheckedValues1 = "";
                var count = 0;

                $('#SelectStudent input[type="checkbox"]:not(:checked)').each(function () {
                    uncheckedValues += $(this).val() + ',';
                    count1++;
                });

                $('#AddStudent input[type="checkbox"]:not(:checked)').each(function () {
                    uncheckedValues1 += $(this).val() + ',';
                    count++;
                });

                if (!count1 || !SelectBatch || !count || !AddBatch) {
                    Swal.fire({
                        title: 'Validation Error',
                        text: 'Please select Batch .',
                        icon: 'error'
                    });
                    return false;
                }

                $('#AddStudent input[type=checkbox]:checked').each(function () {
                    /* if (this.checked) {*/
                    atLeastOneChecked = true;
                    return false; // break out of the loop once a checked checkbox is found
                    /* }*/
                });

                if (atLeastOneChecked) {
                    var Value = "";
                    var txt = "";

                    $('#AddStudent input[type = checkbox]:checked').each(function () {

                        Value = $(this).val();
                        var t = $(this).next('label').text();
                        $(this).next('label').remove();
                        $(this).remove();

                        $("#SelectStudent")

                            .append(`<input type="checkbox" id="${Value}" name="${t}" value="${Value}" Text="${t}" /*style=" visibility: hidden;"*/>`)
                            .append(`<label for="${t}">${t}</label><br>`);

                        $("#AddStudent br:last").remove();

                    });

                } else {
                    // Display an error message or perform any other action for validation failure
                    //alert("Please select at least one student.");
                    Swal.fire({
                        title: 'Error',
                        text: 'Please select at least one student.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    return false;
                }
            });

        });
    </script>
    @*-------  Transfer Student SelectStudent Card to AddStudent Card-----------------*@

    <script>
        $(document).ready(function () {
            $("#SelectCheckStudent").click(function () {
                var atLeastOneChecked = false;
                var id1 = $('#AddBatch').val();
                var uncheckedValues = "";
                var count1 = 0;
                //var AddStudent = $('#AddStudent').val();
                $('#AddStudent input[type="checkbox"]:not(:checked)').each(function () {
                    uncheckedValues += $(this).val() + ',';
                    count1++;
                });
                if (!count1 || !id1) {
                    Swal.fire({
                        title: 'Validation Error',
                        text: 'Please select Batch .',
                        icon: 'error'
                    });
                    return false;
                }

                $('#SelectStudent input[type=checkbox]:checked').each(function () {
                    atLeastOneChecked = true;
                    return false; // break out of the loop once a checked checkbox is found

                });

                if (atLeastOneChecked) {
                    // Your existing code here
                    var Value = "";
                    var txt = "";
                    $('#SelectStudent input[type = checkbox]:checked').each(function () {
                        Value = $(this).val();
                        var t = $(this).next('label').text();
                        $(this).next('label').remove();
                        $(this).remove();

                        $("#AddStudent")
                            .append(`<input type="checkbox" id="${Value}" name="${t}" value="${Value}" Text="${t}">`)
                            .append(`<label for="${t}">${t}</label><br>`);

                        $("#SelectStudent br:last").remove();
                    });
                } else {
                    // Display an error message or perform any other action for validation failure
                    //alert("Please select at least one student.");
                    Swal.fire({
                        title: 'Error',
                        text: 'Please select at least one student.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    return false;
                }
            });
        });
    </script>

    @*   -------  Select Student Card Values and Add student card check Student Value Get In SaveStudent Script-----------------*@
    @*   -------  Uncheck Student Value Get In SaveStudent Script-----------------*@

    <script>
        $(document).ready(function () {

            // Function to show confirmation dialog
            function showConfirmationDialog() {
                var selectBatch = $('#SelectBatch').val();
                var addBatch = $('#AddBatch').val();

                // Validate Select Batch and Add Batch
                if (!selectBatch || !addBatch) {
                    Swal.fire({
                        title: 'Error',
                        text: 'Please select values for both batches.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    return false;
                }

                Swal.fire({
                    title: 'Are you sure?',
                    text: 'You are about to merge Students. Continue?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, merge Students!',
                    cancelButtonText: 'No, cancel'
                }).then(function (result) {
                    if (result.isConfirmed) {
                        // User clicked Yes, proceed with form submission
                        submitForm();
                    } else {
                        // User clicked No, you can redirect or perform any other action here
                        // For example, redirect to another page:
                        window.location.href = '/Bind/MergeBatchStudentAsyncST';
                    }
                });
            }

            // Function to submit the form
            function submitForm() {
                var id = $('#SelectBatch').val();
                var student = "";
                var count = 0;

                var id1 = $('#AddBatch').val();
                var uncheckedValues = "";
                var count1 = 0;

                // Use :not(:checked) to get unchecked checkboxes
                $('#SelectStudent input[type="checkbox"]:not(:checked)').each(function () {
                    student += $(this).val() + ',';
                    count++;
                });

                $('#AddStudent input[type="checkbox"]:not(:checked)').each(function () {
                    uncheckedValues += $(this).val() + ',';
                    count1++;
                });

                $.ajax({
                    url: "/Bind/MergeBatchStudentAsyncST",
                    type: 'POST',
                    data: {
                        SelectBatch: id,
                        SelectStudentCode: student,
                        SelectNoOfStudent: count,
                        AddBatch: id1,
                        AddStudentCode: uncheckedValues,
                        AddNoOfStudent: count1
                    },
                    success: function (result) {
                        if (result.success) {
                            // Show success SweetAlert
                            Swal.fire({
                                title: 'Success',
                                text: result.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(function () {
                                // Redirect or perform any other action after success
                                window.location.href = '/Bind/ListAllBatchAsyncST';
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle error if needed
                    }
                });
            }

            // Attach click event to the form submit button
            $('#BMStud').on('click', function (e) {
                // Show confirmation dialog before proceeding with form submission
                e.preventDefault();
                showConfirmationDialog();
            });
        });
    </script>



    @*------- Select batch and add batch droupdown validation-----------------*@

    <script type="text/javascript">
        $(document).ready(function () {
            $("#SelectBatch").change(function () {
                var id = $(this).val();
                $("#AddBatch").empty();
                $.post("/Bind/ValidationBatchAsyncST", { SelectBatchCode: id }, function (data) {
                    var v = "<option>-----Select Batch-------</option>";
                    $.each(data, function (i, v1) {
                        v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
                    });
                    $("#AddBatch").html(v);
                });
            });
        });

    </script>
</body>
</html>

