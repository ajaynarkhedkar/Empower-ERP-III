@model GSTEducationERPLibrary.Trainer.Trainer
@{
    ViewBag.Title = "AddAttendanceAsyncYT";
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
}
<html>
<head>
    <script src="~/Content/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <link href="~/Content/plugins/icheck-bootstrap/icheck-bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Content/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css" />
    <link rel="stylesheet" href="~/Content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/Content/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/Content/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <style>
        .dataTables_wrapper .btn-secondary {
            color: #235;
            background-color: transparent !important;
            border-color: transparent;
            font-size: x-large;
            margin: 0px !important;
        }
        h2 {
            padding-top: 10px;
            margin-bottom: 10px;
            font-family: Verdana;
            font-weight: bold;
            font-size: medium;
            color: #33CCCC;
        }
        .card-primary.card-outline-tabs > .card-header a.active {
            border-top: 3px solid #33CCCC;
        }
        a {
            color: #33CCCC;
        }
        .card.card-outline-tabs .card-header a:hover {
            color: #33CCCC;
        }
        .card-primary.card-outline-tabs > .card-header a.active, .card-primary.card-outline-tabs > .card-header a.active:hover {
            border-top: 3px solid #33CCCC;
        }
        .card-body {
            font-family: Calibri !important;
            padding-bottom: 0px !important;
        }
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        th {
            background-color: #33CCCC;
            color: #000;
            text-align: center !important;
        }
        td {
            text-align: center;
            color: black !important;
        }
        .table td {
            padding: 0px 0px 0px 0px !important;
            font-size: 14px !important;
        }
        .table th {
            padding: 5px 5px 4px 10px !important;
            font-size: 14px !important;
        }
        table.dataTable > thead .sorting:after, table.dataTable > thead .sorting:before {
            font-size: xx-small !important;
        }
        div.dataTables_wrapper div.dataTables_filter {
            margin-top: -10px !important;
        }
        div.dt-buttons {
            margin-top: -20px !important;
        }
        .btn-group > .btn:not(:last-child):not(.dropdown-toggle), .btn-group > .btn-group:not(:last-child) > .btn {
            padding-left: 5px !important;
            padding-right: 5px !important;
        }
        div.dataTables_wrapper div.dataTables_filter label {
            font-size: small !important;
        }
        div.dataTables_wrapper div.dataTables_filter input {
            height: 20px !important;
        }
        div.dataTables_wrapper div.dataTables_info {
            padding: 0px !important;
            font-size: small !important;
        }
        div.dataTables_wrapper div.dataTables_paginate ul.pagination {
            margin-top: 0px !important;
        }
        div.dataTables_wrapper div.dataTables_paginate {
            font-size: small !important;
        }
        .icheck-danger {
            margin-left: 30px;
        }
    </style>
</head>
<body style="margin: 0; padding: 0;">
    <br />
    <div class="card " style="padding: 10px;">
        <div style="display: flex; justify-content: space-between;">
            <h2 style="margin-right: auto;">Mark Topic Attendance</h2>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-6">
                        @Model.CourseName
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.BatchCode, "Batch Name", htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.DropDownListFor(model => model.BatchCode, new SelectList(ViewBag.BatchList, "BatchAssignedScheduledId", "BatchName"), "---Select Batch--- ", new { @class = "form-control col-md-10", id = "BatchCode" })
                    @Html.ValidationMessageFor(model => model.BatchCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.SectionId, "Section Name", htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.DropDownListFor(model => model.SectionId, new SelectList(Enumerable.Empty<SelectListItem>()), "---Select Section---", new { @class = "form-control col-md-10", id = "SectionName" })
                    @Html.ValidationMessageFor(model => model.SectionId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.TopicId, "Topic Name", htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.DropDownListFor(model => model.TopicId, new SelectList(Enumerable.Empty<SelectListItem>()), "---Select Section---", new { @class = "form-control col-md-10", id = "TopicName" })
                    @Html.ValidationMessageFor(model => model.TopicId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, "Date", htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.EditorFor(model => model.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control col-md-10 datepicker", id = "StartDate" })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="bootstrap-timepicker">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Time, "Time", htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            <div class="input-group date" data-target-input="nearest">
                                <input type="text" id="timepickerExam" name="Time" class="form-control col-md-12 datetimepicker-input" data-target="#timepickerExam" disabled />
                                <div class="input-group-append" data-target="#timepickerExam" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="far fa-clock"></i></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.TotalStudents, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-6">
                        @Model.TotalStudents
                        <span id="TotalStudents"></span>
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <form id="myForm">
            <div class="card col-md-8 mx-auto" style="margin-bottom:10px;">
                <table id="attendanceTable" class="table-bordered m-2" style="align-content:center">
                    <thead>
                        <tr>
                            <th> Sr No</th>
                            <th hidden>
                                Student code
                            </th>
                            <th>
                                Student Name
                            </th>
                            <th>
                                Attendance
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td></td>
                            <td hidden></td>
                            <td></td>
                            <td>
                                <div class="form-group clearfix">
                                    <div class="icheck-success d-inline">
                                        <input type="radio" id="radioPrimary1" name="r1">
                                        <label for="radioPrimary1">Present</label>
                                    </div>
                                    <div class="icheck-danger d-inline">
                                        <input type="radio" id="radioPrimary2" name="r1">
                                        <label for="radioPrimary2">Absent</label>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div style="text-align:center; margin-top: 10px; margin-bottom: 10px;">
                    <button id="saveButton" type="button" class="btn btn-success btn-sm" style="margin-left: 10px;">Save</button>
                    <button id="clearButton" type="button" class="btn btn-danger btn-sm" style="margin-left: 10px;">Clear</button>
                </div>
            </div>
        </form>
    </div>
    <script src="~/Content/plugins/jquery/jquery.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/moment/moment.min.js"></script>
    <script src="~/Content/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <script src="~/Content/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        var batchCode;
        $(document).ready(function () {
            $("#saveButton").prop("disabled", true);
            $('#timepickerExam').datetimepicker({
                format: 'LT'
            });
        $("#BatchCode").change(function () {
            validateFields();
         var id = $(this).val();
         console.log("Selected ID:", id);
         var batchList = @Html.Raw(Json.Encode(ViewBag.BatchList));
            console.log("Batch List:", batchList);
            var selectedBatch = $.grep(batchList, function (batch) {
                console.log("BatchAssignedScheduledId:", batch.BatchAssignedScheduledId, "id:", id);
                return batch.BatchAssignedScheduledId === parseInt(id);
            });
            console.log("Selected Batch:", selectedBatch);
            if (selectedBatch.length > 0) {
                batchCode = selectedBatch[0].BatchCode;
                $("#TotalStudents").text(selectedBatch[0].TotalStudents);
            }
            $.get("ListSection", { ScheduleId: id }, function (data) {
                var v = "<option>---Select---</option>";
                $.each(data, function (i, v1) {
                    v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
                });
                $("#SectionName").html(v);
            });
            $.get("ListStudentYT", { ScheduleId: id }, function (data) {
                $("#attendanceTable tbody").empty();
                $.each(data, function (i, student) {
                    var row = "<tr>";
                    row += "<td>" + (i + 1) + "</td>";
                    row += "<td hidden>" + student.Value + "</td>";
                    row += "<td>" + student.Text + "</td>";
                    row += '<td><div class="form-group clearfix">';
                    row += '<div class="icheck-success d-inline">';
                    row += '<input type="radio" id="present_' + student.Value + '" name="attendance_' + student.Value + '" value="Present">';
                    row += '<label for="present_' + student.Value + '">Present</label>';
                    row += '</div>';
                    row += '<div class="icheck-danger d-inline">';
                    row += '<input type="radio" id="absent_' + student.Value + '" name="attendance_' + student.Value + '" value="Absent">';
                    row += '<label for="absent_' + student.Value + '">Absent</label>';
                    row += '</div>';
                    row += '</div></td>';
                    row += "</tr>";
                    $("#attendanceTable tbody").append(row);
                });
                $("#attendanceTable tbody input[type='radio']").change(validateFields);
            });
        });
            $("#TopicName").change(function () {
                validateFields();
            });
            function validateFields() {
                var totalStudents = $("#attendanceTable tbody tr").length;
                var totalChecked = $("#attendanceTable tbody input[type='radio']:checked").length;
                var topicName = $("#TopicName").val();
                var time = $("#timepickerExam").val();
                if (topicName && time && totalStudents > 0 && totalStudents === totalChecked) {
                    $("#saveButton").prop("disabled", false);
                } else {
                    $("#saveButton").prop("disabled", true);
                }
            }
            $("#SectionName").change(function () {
                validateFields();
				var ScheduleId = $("#BatchCode").val();
                var id = $(this).val();
                $.get("ListTopic", { SectionId: id, ScheduleId: ScheduleId }, function (data) {
                    var v = "<option>---Select---</option>";
                    $.each(data, function (i, v1) {
                        v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
                    });
                    $("#TopicName").html(v);
                });
            });
            $("#TopicName").change(function () {
                var topicId = $(this).val();
                $.get("GetTopicStartDate", { TopicId: topicId }, function (data) {
                    debugger;
                    var dateParts = data.split('-');
                    if (dateParts.length !== 3) {
                        console.error("Invalid date format received from server:", data);
                        return;
                    }
                    var day = parseInt(dateParts[0], 10);
                    var month = parseInt(dateParts[1], 10) - 1;
                    var year = parseInt(dateParts[2], 10);
                    var parsedDate = new Date(year, month, day);
                    if (isNaN(parsedDate.getTime())) {
                        console.error("Invalid date format received from server:", data);
                        return;
                    }
                    var formattedStartDate = parsedDate.getFullYear() + "-" + ("0" + (parsedDate.getMonth() + 1)).slice(-2) + "-" + ("0" + parsedDate.getDate()).slice(-2);
                    $("#StartDate").val(formattedStartDate);
                });
            });

            $("#saveButton").click(function () {
                var scheduleId = $("#TopicName").val();
                var date = $("#StartDate").val();
                var time = $("#timepickerExam").val();
                var attendanceData = [];
                $("#attendanceTable tbody tr").each(function () {
                    var studentCode = $(this).find("td:nth-child(2)").text();
                    var attendanceStatusId = $(this).find("input[type='radio']:checked").val() === "Present" ? 30 : 31;
                    attendanceData.push({
                        BatchCode: batchCode,
                        AssignScheduleId: scheduleId,
                        Date: date,
                        Time: time,
                        StudentCode: studentCode,
                        AttendanceStatusId: attendanceStatusId
                    });
                });
                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to save the attendance?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, save it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        var scheduleId = $("#TopicName").val();
                        var date = $("#StartDate").val();
                        var time = $("#timepickerExam").val();
                        var attendanceData = [];
                        $("#attendanceTable tbody tr").each(function () {
                            var studentCode = $(this).find("td:nth-child(2)").text();
                            var attendanceStatusId = $(this).find("input[type='radio']:checked").val() === "Present" ? 30 : 31;
                            attendanceData.push({
                                BatchCode: batchCode,
                                AssignScheduleId: scheduleId,
                                Date: date,
                                Time: time,
                                StudentCode: studentCode,
                                AttendanceStatusId: attendanceStatusId
                            });
                        });
                        $.ajax({
                            url: "AddAttendanceAsyncYT",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(attendanceData),
                            success: function (response) {
                                Swal.fire({
                                    title: 'Success!',
                                    text: 'Attendance saved successfully!',
                                    icon: 'success'
                                }).then(() => {
                                    window.location.href = '/Trainer/ListAttendanceAsyncYT';
                                });
                            },
                            error: function (xhr, status, error) {
                                console.error(error);
                                Swal.fire({
                                    title: 'Error!',
                                    text: 'Failed to save attendance. Please try again.',
                                    icon: 'error'
                                });
                            }
                        });
                    }
                });
            });
        });
    </script>
    <script>
        var currentTime = new Date();
        var hours = currentTime.getHours();
        var minutes = currentTime.getMinutes();
        if (minutes < 10) {
            minutes = "0" + minutes;
        }
        document.getElementById('timepickerExam').value = hours + ":" + minutes;
    </script>
    <script>
        document.getElementById('clearButton').addEventListener('click', function () {
            $("#attendanceTable tbody input[type='radio']:checked").prop("checked", false);
            $("#attendanceTable tbody input[type='radio']").trigger("change");
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#StartDate').on('change', function () {
                var selectedDate = new Date($(this).val());
                var today = new Date();
                if (selectedDate > today) {
                    $(this).val('');
                    toastr.error('Please select a date on or before today.');
                }
            });
        });
    </script>
    <script>
        var currentDate = new Date();
        var formattedDate = currentDate.toISOString().slice(0, 10);
        document.getElementById("StartDate").value = formattedDate;
    </script>
</body>
</html>