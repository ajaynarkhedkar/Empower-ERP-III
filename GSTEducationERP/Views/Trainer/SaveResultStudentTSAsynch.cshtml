@model GSTEducationERPLibrary.Trainer.Trainer

@{
    ViewBag.Title = "SaveResultStudentTSAsynch";
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
}
<html>
<head>
    <style>
        .rectangular-radio {
            display: flex;
            align-items: center;
        }

            .rectangular-radio label {
                position: relative;
                padding-left: 30px; /* Adjust this value to align the square radio button inside the label */
                cursor: pointer;
                font-size: 16px; /* Adjust the font size as needed */
                margin-right: 20px; /* Adjust spacing between labels */
            }

                .rectangular-radio label::before {
                    content: '';
                    position: absolute;
                    left: 0;
                    top: 50%;
                    transform: translateY(-50%);
                    width: 20px; /* Adjust the width of the square */
                    height: 20px; /* Adjust the height of the square */
                    background-color: #fff;
                    border: 2px solid #007bff; /* Change border color as needed */
                    border-radius: 4px; /* Adjust border radius for squareness */
                    transition: all 0.3s ease;
                }

            .rectangular-radio input[type="radio"] {
                display: none;
            }

                .rectangular-radio input[type="radio"]:checked + label::before {
                    background-color: #007bff; /* Change background color when checked */
                }


    </style>


    <script src="~/Content/plugins/jquery/jquery.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <div class="card">
        <div class="card-body">
            @Html.HiddenFor(model => model.AssignTestId)
            @Html.HiddenFor(model => model.PassingMarks)
            <div class="row justify-content-center">
                <div class="input-group col-md-4">
                    <label class="col-md-6">Course: </label>
                    @Model.CourseName
                </div>
                <div class="input-group col-md-4">
                    <label class="col-md-6">Batch:</label>
                    @Model.BatchName
                </div>
                <div class="input-group col-md-4">
                    <label class="col-md-51">Exam:</label>
                    @Model.TestName
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="input-group col-md-4">
                    <label class="col-md-6">Exam Date: </label>
                    @Model.TestDate.ToString("yyyy-MM-dd")
                </div>
                <div class="input-group col-md-4">
                    <label class="col-md-6">Exam Time: </label>
                    @Model.TestTime.ToString("hh:mm tt")
                </div>
                <div class="input-group col-md-4">
                    <label class="col-md-6">Total Marks: </label>
                    @Model.TotalMarks
                </div>
            </div>
            <div class="card pl-3 mt-2">
                <br />
                <div class="row form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.StudentCode, "Student Name:", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.StudentCode, new SelectList(ViewBag.Student, "Value", "Text"), "--Select Student--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StudentCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <label for="Attendance" class="control-label">Attendance:</label>
                    <div class="form-group rectangular-radio">

                        <input type="radio" id="presentRadio" name="Attendance" value="Present">
                        <label for="presentRadio">Present</label>

                        <input type="radio" id="absentRadio" name="Attendance" value="Absent">
                        <label for="absentRadio">Absent</label>

                        @Html.ValidationMessageFor(model => model.Attendance, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="row form-group">
                    <div class="col-md-4">
                        @Html.Label("Obtained Marks:", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.ObtainedMarks, new { htmlAttributes = new { @class = "form-control", id = "ObtainedMarks", maxlength = 3 } })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 text-center">
                        <button type="button" class="btn btn-primary btn-sm" id="add-button">ADD</button>
                    </div>
                </div>
                <br />
            </div>


            <div class="card pl-3 mt-2">
                <table class="table table-bordered" id="studentTable">
                    <thead>
                        <tr>
                            <th scope="col">No.</th>
                            <th scope="col">Student Name</th>
                            <th scope="col">Obtained Marks</th>
                            <th scope="col">Attendance</th>
                            <th scope="col">Status</th>
                            <th scope="col">Action</th>
                            <th scope="col" style="display:none;">Student Code</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>

            <br />
            <div class="row">
                <div class="col-md-12 text-center">
                    <button type="button" class="btn btn-primary btn-success btn-custom" id="save-button">Save</button>
                    <span class="spacer"></span>
                    <input type="reset" value="CLEAR" class="btn btn-warning btn-custom" id="btnClear" onclick="clearForm()" />
                </div>
            </div>
            <br />
        </div>
    </div>

    <script>
        $(document).ready(function () {
            // Your other JavaScript code here...

            // Example SweetAlert2 usage
            $("#save-button").click(function () {
                // Show confirmation dialog using SweetAlert2
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'You are about to save the data.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, save it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // If user confirms, continue with your save logic here
                        console.log('Data saved!');
                    }
                });
            });
        });
    </script>


</body>
</html>